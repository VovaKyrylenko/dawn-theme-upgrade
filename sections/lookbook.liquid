{% style %}
  .lookbook-section {
    display: flex;
    align-items: stretch;
    background-color: #f8f8f8;
    padding: 2rem;
  }

  .lookbook-image {
    flex: 1;
    max-width: 60%;
  }

  .lookbook-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .lookbook-products {
    flex: 1;
    padding-left: 2rem;
    display: flex;
    flex-direction: column;
  }

  .product-item {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    background-color: #fff;
    padding: 1rem;
  }

  .product-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    margin-right: 1rem;
  }

  .product-details {
    flex: 1;
  }

  .product-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .product-price {
    font-size: 0.9rem;
    color: #888;
    margin-bottom: 0.5rem;
  }

  .product-original-price {
    text-decoration: line-through;
    margin-right: 0.5rem;
  }

  .product-discounted-price {
    color: #e53e3e;
  }

  .product-select {
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    border: 1px solid #ddd;
  }

  .add-to-bag {
    width: 100%;
    background-color: #000;
    color: #fff;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .add-to-bag:hover {
    background-color: #333;
  }

  @media (max-width: 768px) {
    .lookbook-section {
      flex-direction: column;
    }

    .lookbook-image {
      max-width: 100%;
      margin-bottom: 2rem;
    }

    .lookbook-products {
      padding-left: 0;
    }
  }
{% endstyle %}

<div class="lookbook-section">
  <div class="lookbook-image">
    {% if section.settings.lookbook_image != blank %}
      {{
        section.settings.lookbook_image
        | image_url: width: 1200
        | image_tag: alt: section.settings.lookbook_alt_text, loading: 'lazy'
      }}
    {% else %}
      {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
    {% endif %}
  </div>

  <div class="lookbook-products">
    {% for product in section.settings.products %}
      <div class="product-item" data-product-id="{{ product.id }}">
        <img
          src="{{ product.featured_image | image_url: width: 200 }}"
          alt="{{ product.title | escape }}"
          class="product-image"
          loading="lazy"
        >
        <div class="product-details">
          <h3 class="product-title">{{ product.title | escape }}</h3>
          <div class="product-price">
            {% if product.compare_at_price > product.price %}
              <span class="product-original-price">{{ product.compare_at_price | money }}</span>
              <span class="product-discounted-price">{{ product.price | money }}</span>
            {% else %}
              {{ product.price | money }}
            {% endif %}
          </div>
          {% if product.has_only_default_variant %}
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          {% else %}
            <select name="id" class="product-select">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}">{{ variant.title }}</option>
              {% endfor %}
            </select>
          {% endif %}
          <button class="add-to-bag" data-product-id="{{ product.id }}">Add to bag</button>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Lookbook",
  "settings": [
    {
      "type": "image_picker",
      "id": "lookbook_image",
      "label": "Lookbook Image"
    },
    {
      "type": "text",
      "id": "lookbook_alt_text",
      "label": "Lookbook Image Alt Text",
      "default": "Lookbook image"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Select Products",
      "limit": 4
    }
  ],
  "presets": [
    {
      "name": "Lookbook",
      "category": "Product"
    }
  ]
}
{% endschema %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const addToCartButtons = document.querySelectorAll('.add-to-bag');
  
  addToCartButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      const productId = this.getAttribute('data-product-id');
      const productContainer = document.querySelector(`.product-item[data-product-id="${productId}"]`);
      let variantId;

      if (productContainer.querySelector('.product-select')) {
        variantId = productContainer.querySelector('.product-select').value;
      } else {
        variantId = productContainer.querySelector('input[name="id"]').value;
      }

      const formData = new FormData();
      formData.append('id', variantId);
      formData.append('quantity', 1);

      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        console.log('Product added to cart:', data);
        button.textContent = 'Added to bag';
        button.disabled = true;
        setTimeout(() => {
          button.textContent = 'Add to bag';
          button.disabled = false;
        }, 2000);
      })
      .catch(error => {
        console.error('Error:', error);
        button.textContent = 'Error';
        setTimeout(() => {
          button.textContent = 'Add to bag';
        }, 2000);
      });
    });
  });
});
{% endjavascript %}
