{% style %}
  .lookbook-section {
    display: flex;
    align-items: stretch;
    background-color: #f8f8f8;
    padding: 2rem;
  }

  .lookbook-image {
    flex: 1;
    max-width: 60%;
  }

  .lookbook-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .lookbook-products {
    flex: 1;
    padding-left: 2rem;
    display: flex;
    flex-direction: column;
  }

  .product-item {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    background-color: #fff;
    padding: 1rem;
    cursor: pointer;
  }

  .product-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    margin-right: 1rem;
  }

  .product-details {
    flex: 1;
  }

  .product-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .product-price {
    font-size: 0.9rem;
    color: #888;
    margin-bottom: 0.5rem;
  }

  .product-original-price {
    text-decoration: line-through;
    margin-right: 0.5rem;
  }

  .product-discounted-price {
    color: #e53e3e;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  .modal-product-image {
    width: 100%;
    max-height: 300px;
    object-fit: cover;
    margin-bottom: 1rem;
  }

  .modal-product-select {
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 1rem;
    border: 1px solid #ddd;
  }

  .modal-add-to-bag {
    width: 100%;
    background-color: #000;
    color: #fff;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .modal-add-to-bag:hover {
    background-color: #333;
  }

  @media (max-width: 768px) {
    .lookbook-section {
      flex-direction: column;
    }

    .lookbook-image {
      max-width: 100%;
      margin-bottom: 2rem;
    }

    .lookbook-products {
      padding-left: 0;
    }
  }
{% endstyle %}

<div class="lookbook-section">
  <div class="lookbook-image">
    {% if section.settings.lookbook_image != blank %}
      {{
        section.settings.lookbook_image
        | image_url: width: 1200
        | image_tag: alt: section.settings.lookbook_alt_text, loading: 'lazy'
      }}
    {% else %}
      {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
    {% endif %}
  </div>

  <div class="lookbook-products">
    {% for product in section.settings.products %}
      <div class="product-item" data-product-id="{{ product.id }}">
        <img
          src="{{ product.featured_image | image_url: width: 200 }}"
          alt="{{ product.title | escape }}"
          class="product-image"
          loading="lazy"
        >
        <div class="product-details">
          <h3 class="product-title">{{ product.title | escape }}</h3>
          <div class="product-price">
            {% if product.compare_at_price > product.price %}
              <span class="product-original-price">{{ product.compare_at_price | money }}</span>
              <span class="product-discounted-price">{{ product.price | money }}</span>
            {% else %}
              {{ product.price | money }}
            {% endif %}
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

<div id="productModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <img id="modalProductImage" class="modal-product-image" src="" alt="">
    <h2 id="modalProductTitle"></h2>
    <p id="modalProductPrice"></p>
    <select id="modalProductVariants" class="modal-product-select"></select>
    <button id="modalAddToBag" class="modal-add-to-bag">Add to bag</button>
  </div>
</div>

{% schema %}
{
  "name": "Lookbook",
  "settings": [
    {
      "type": "image_picker",
      "id": "lookbook_image",
      "label": "Lookbook Image"
    },
    {
      "type": "text",
      "id": "lookbook_alt_text",
      "label": "Lookbook Image Alt Text",
      "default": "Lookbook image"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Select Products",
      "limit": 4
    }
  ],
  "presets": [
    {
      "name": "Lookbook",
      "category": "Product"
    }
  ]
}
{% endschema %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const productItems = document.querySelectorAll('.product-item');
  const modal = document.getElementById('productModal');
  const closeBtn = modal.querySelector('.close');
  const modalProductImage = document.getElementById('modalProductImage');
  const modalProductTitle = document.getElementById('modalProductTitle');
  const modalProductPrice = document.getElementById('modalProductPrice');
  const modalProductVariants = document.getElementById('modalProductVariants');
  const modalAddToBag = document.getElementById('modalAddToBag');

  productItems.forEach(item => {
    item.addEventListener('click', function() {
      const productId = this.getAttribute('data-product-id');
      fetchProductDetails(productId);
    });
  });

  closeBtn.addEventListener('click', function() {
    modal.style.display = 'none';
  });

  window.addEventListener('click', function(event) {
    if (event.target == modal) {
      modal.style.display = 'none';
    }
  });

  function fetchProductDetails(productId) {
    fetch(`/products/${productId}.js`)
      .then(response => response.json())
      .then(product => {
        populateModal(product);
        modal.style.display = 'block';
      })
      .catch(error => console.error('Error:', error));
  }

  function populateModal(product) {
    modalProductImage.src = product.featured_image;
    modalProductImage.alt = product.title;
    modalProductTitle.textContent = product.title;
    modalProductPrice.textContent = formatMoney(product.price);

    modalProductVariants.innerHTML = '';
    product.variants.forEach(variant => {
      const option = document.createElement('option');
      option.value = variant.id;
      option.textContent = variant.title;
      modalProductVariants.appendChild(option);
    });

    modalAddToBag.onclick = function() {
      addToCart(product.variants[0].id);
    };
  }

  function addToCart(variantId) {
    const formData = new FormData();
    formData.append('id', variantId);
    formData.append('quantity', 1);

    fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      console.log('Product added to cart:', data);
      modal.style.display = 'none';
      // Here you might want to update the cart count or show a success message
    })
    .catch(error => {
      console.error('Error:', error);
      // Here you might want to show an error message to the user
    });
  }

  function formatMoney(cents) {
    return (cents / 100).toLocaleString('en-US', {
      style: 'currency',
      currency: 'USD',
    });
  }
});
{% endjavascript %}
